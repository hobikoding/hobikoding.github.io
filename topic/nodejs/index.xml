<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nodejs on Hobi Koding — Mari Ngoding Sambil Tidur</title><link>https://hobikoding.com/topic/nodejs/</link><description>Recent content in nodejs on Hobi Koding — Mari Ngoding Sambil Tidur</description><generator>Hugo -- gohugo.io</generator><language>id-id</language><managingEditor>maslulsaefulloh@gmail.com (Saefulloh Maslul)</managingEditor><webMaster>maslulsaefulloh@gmail.com (Saefulloh Maslul)</webMaster><copyright>Copyright (c) 2018, Hobikoding; all rights reserved.</copyright><lastBuildDate>Sat, 16 May 2020 11:06:56 +0700</lastBuildDate><atom:link href="https://hobikoding.com/topic/nodejs/index.xml" rel="self" type="application/rss+xml"/><item><title>Dependency Injection Pada Typescript Dengan Inversify</title><link>https://hobikoding.com/dependency-injection-typescript/</link><pubDate>Sat, 16 May 2020 11:06:56 +0700</pubDate><author>maslulsaefulloh@gmail.com (Saefulloh Maslul)</author><guid>https://hobikoding.com/dependency-injection-typescript/</guid><description>Salah satu desain pattern yang banyak digunakan selain MVC adalah DDD (Domain Driven Design). DDD dipilih sebagai solusi untuk meminimalisir kompleksitas pada controller dalam MVC.
Selain itu, kode juga lebih mudah di test ketika menggunakan pattern DDD. Karena ketika menjalankan unit testing kita dapat mock dependency yang digunakan dalam class tersebut.
Manual Dependency Injection Namun terdapat permasalahan ketika melakukan inject dependency, misalnya saja:
SomeClass membutuhkan DependencySatu, DependencyDua, DependencyTiga. Maka ketika pembuatan object SomeClass seperti ini:</description></item><item><title>Transfer Data Antar Service Menggunakan gRPC Node.js</title><link>https://hobikoding.com/transfer-data-antar-service-grpc/</link><pubDate>Sat, 09 May 2020 20:53:58 +0700</pubDate><author>maslulsaefulloh@gmail.com (Saefulloh Maslul)</author><guid>https://hobikoding.com/transfer-data-antar-service-grpc/</guid><description>Sebelumnya kita telah membahas cara membuat microservices grpc dengan nodejs. Kita juga telah mengetahui cara integrasi service dengan framework express.js.
Pada artikel kali ini, kita akan membahas transfer data dari service satu ke service lain melalui protokol gRPC.
Preparation Project sebelumnya, kita namakan sebagai service utility. Sedangkan project pada artikel ini kita namakan sebagai service user.
Service user membutuhkan data catatan yang diambil dari service utility. Untuk meminta datanya, service user melakukan panggilan (call) ke service utility dengan gRPC.</description></item><item><title>Integrasi gRPC Server Dengan Express Node.js</title><link>https://hobikoding.com/integrasi-grpc-dengan-express-nodejs/</link><pubDate>Fri, 01 May 2020 11:45:02 +0700</pubDate><author>maslulsaefulloh@gmail.com (Saefulloh Maslul)</author><guid>https://hobikoding.com/integrasi-grpc-dengan-express-nodejs/</guid><description>Sebelumnya saya telah membuat artikel yang membahas cara membuat microservices grpc di nodejs. Sekarang kita akan mengintegrasikan microservices grpc tersebut dengan expressjs.
Bagi yang belum membaca artikel di atas dan bingung dengan pembahasan pada artikel ini, saya sarankan untuk membaca terlebih dahulu artikel sebelumnya.
Preparation Di project ini kita akan membuat server nodejs menggunakan express. Server tersebut disamping menjalankan express app, juga sekaligus menjalankan grpc server.
Struktur project akan jadi seperti ini:</description></item><item><title>Membuat Microservices Node.js dengan Arsitektur gRPC</title><link>https://hobikoding.com/nodejs-grpc-microservices/</link><pubDate>Fri, 24 Apr 2020 11:40:19 +0700</pubDate><author>maslulsaefulloh@gmail.com (Saefulloh Maslul)</author><guid>https://hobikoding.com/nodejs-grpc-microservices/</guid><description>Akhir-akhir ini arsitektur microservices semakin dilirik banyak company.
Selain memudahkan ketika development, arsitektur microservice juga lebih mudah untuk scale, sehingga tidak akan terjadi masalah ketika company mulai besar dan mengharuskan scale aplikasi.
Di nodejs, salah satu arsitektur yang bisa digunakan untuk menangani request antar service yaitu gRPC.
Preparation Di project ini, kita akan membuat sebuah service dengan nama notes. Service ini memiliki method list untuk menampilkan beberapa note (array of note).</description></item></channel></rss>