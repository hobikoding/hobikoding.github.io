<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>development on Hobikoding</title><link>/tags/development/</link><description>Recent content in development on Hobikoding</description><generator>Hugo -- gohugo.io</generator><language>id-id</language><managingEditor>hobikoding@gmail.com (Saefulloh Maslul)</managingEditor><webMaster>hobikoding@gmail.com (Saefulloh Maslul)</webMaster><lastBuildDate>Wed, 02 Apr 2014 02:13:50 +0000</lastBuildDate><atom:link href="/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>(Hu)go Template Primer</title><link>/post/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 02:13:50 +0000</pubDate><author>hobikoding@gmail.com (Saefulloh Maslul)</author><guid>/post/goisforlovers/</guid><description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description></item></channel></rss>